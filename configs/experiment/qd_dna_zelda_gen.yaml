#@package _global_

defaults:
  - /problem@task.problem: zelda_levelgen
  - /strategy@trainer.strategy: cmaes
  - /callbacks@callbacks.viz_mpe_repertoire: viz_mpe_repertoire
  - override /trainer: evo
  - override /model: nca_dna
  - override /task: dna_qd
  - _self_


tags: ["qd", "zelda", "nca_dna", "evo"]

model:
  nca:
    dev_steps: 50
    grid_size: ["${task.problem.height}", "${task.problem.width}"]
  dna:
    sequence_length: 8
    alphabet_size: 4

task:
  n_iters: 10
  popsize: 200  # number of initial dnas
  n_centroids: 1000

  qd_algorithm:
    emitter:
      batch_size: 200

  problem:
    height: 16
    width: 16

trainer:
  steps: 10000
  eval_freq: 100
  eval_steps: 1

  strategy:
    popsize: 100
    maximize: True

  strategy_params:
    init_min: -0.1
    init_max: 0.1
    clip_min: -1
    clip_max: 1

callbacks:
  model_checkpoint:
    monitor_key: val/fitness_mean
    mode: max
    state_getter:
      _target_: src.trainer.evo.BestModelFromState
  viz_mpe_repertoire:
    save_dir: ${paths.output_dir}/visualizations
